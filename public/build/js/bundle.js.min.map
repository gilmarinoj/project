{"version":3,"sources":["horas.js","ponentes.js","tags.js"],"names":["document","querySelectorAll","length","categoria","querySelector","dias","inputHiddenDia","inputHiddenHora","addEventListener","terminoBusqueda","forEach","dia","busqueda","categoria_id","value","e","target","name","horaPrevia","classList","remove","Object","values","includes","buscarEventos","async","url","resultado","fetch","eventos","listadoHoras","li","add","horasTomadas","map","evento","hora_id","listadoHorasArray","Array","from","filter","hora","dataset","horaId","seleccionarHora","obtenerHorasDisponibles","json","id","horaSeleccionada","onclick","ponentesInput","ponentes","ponentesFiltrados","listadoPonentes","ponenteHidden","seleccionarPonente","ponente","ponentePrevio","ponenteId","request","arrayPonentes","nombre","trim","apellido","formatearPonentes","obtenerPonentes","expresion","RegExp","toLowerCase","search","firstChild","removeChild","ponenteHTML","createElement","textContent","appendChild","noPonentes","mostrarPonentes","obtenerPonente","tagsInput","console","log","tagsDiv","tagsInputHidden","tags","mostrarTags","tag","etiqueta","ondblclick","eliminarTag","actualizarInputHidden","toString","split","keyCode","preventDefault"],"mappings":"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","file":"bundle.js","sourcesContent":["(function () {\n    const horas = document.querySelectorAll(\"#horas\");\n\n\n\n    if (horas.length > 0) {        \n        const categoria = document.querySelector('[name=\"categoria_id\"]');\n        const dias = document.querySelectorAll('[name=\"dia\"]');\n        const inputHiddenDia = document.querySelector('[name=\"dia_id\"]');\n        const inputHiddenHora = document.querySelector('[name=\"hora_id\"]');\n\n        categoria.addEventListener(\"change\", terminoBusqueda);\n        dias.forEach((dia) => dia.addEventListener(\"change\", terminoBusqueda));\n\n        let busqueda = {\n            categoria_id: +categoria.value || '',\n            dia: +inputHiddenDia.value || '',\n        };\n\n        if (!Object.values(busqueda).includes('')) {\n\n            (async () => {\n                await buscarEventos();\n                const id = inputHiddenHora.value\n\n                // Mostrar la hora actual\n                const horaSeleccionada = document.querySelector(`[data-hora-id=\"${id}\"]`);\n\n                horaSeleccionada.classList.remove('horas__hora--deshabilitado');\n                horaSeleccionada.classList.add('horas__hora--seleccionado');\n\n                horaSeleccionada.onclick = seleccionarHora;\n            })()\n\n        }\n\n        function terminoBusqueda(e) {\n            busqueda[e.target.name] = e.target.value;\n            \n\n            // Reiniciar campos ocultos y el selector de horas\n            inputHiddenHora.value = '';\n            inputHiddenDia.value = '';\n\n            const horaPrevia = document.querySelector(\".horas__hora--seleccionado\");\n            if (horaPrevia) {\n                horaPrevia.classList.remove(\"horas__hora--seleccionado\");\n            }\n\n            if (Object.values(busqueda).includes(\"\")) {\n                return;\n            }\n\n            buscarEventos();\n        }\n\n        async function buscarEventos() {\n            const { dia, categoria_id } = busqueda;\n            const url = `/api/eventos-horario?dia_id=${dia}&categoria_id=${categoria_id}`;\n\n            const resultado = await fetch(url);\n            const eventos = await resultado.json();            \n\n            obtenerHorasDisponibles(eventos);\n        }\n\n        function obtenerHorasDisponibles(eventos) {\n            // Reiniciar las horas\n            const listadoHoras = document.querySelectorAll(\"#horas li\");\n\n            listadoHoras.forEach(li => li.classList.add('horas__hora--deshabilitado'));\n\n\n            // Comprobar eventos\n\n            const horasTomadas = eventos.map((evento) => evento.hora_id);\n            const listadoHorasArray = Array.from(listadoHoras);\n\n            const resultado = listadoHorasArray.filter(\n                (hora) => {\n                    return !horasTomadas.includes(hora.dataset.horaId)\n                }\n            );\n\n            resultado.forEach(li => li.classList.remove('horas__hora--deshabilitado'));\n\n            const horasDisponibles = document.querySelectorAll(\"#horas li:not(.horas__hora--deshabilitado)\");\n            horasDisponibles.forEach((hora) => {\n                hora.addEventListener(\"click\", seleccionarHora);\n            });\n        }\n\n        function seleccionarHora(e) {\n            // Quitar hora previamente seleccionada\n\n            const horaPrevia = document.querySelector(\".horas__hora--seleccionado\");\n            if (horaPrevia) {\n                horaPrevia.classList.remove(\"horas__hora--seleccionado\");\n            }\n\n            // Agregar clase seleccionado\n\n            e.target.classList.add(\"horas__hora--seleccionado\");\n\n            inputHiddenHora.value = e.target.dataset.horaId;\n\n            // Llenar el campo oculto de dia\n            inputHiddenDia.value = document.querySelector('[name=\"dia\"]:checked').value;\n        }\n    }\n})();\n","(function () {\n\n    const ponentesInput = document.querySelector('#ponentes');\n\n    if (ponentesInput) {\n        let ponentes = [];\n        let ponentesFiltrados = [];\n\n        const listadoPonentes = document.querySelector('#listado-ponentes');\n        const ponenteHidden = document.querySelector('[name=\"ponente_id\"]');\n\n        obtenerPonentes();\n\n        ponentesInput.addEventListener('input', buscarPonentes);\n\n        if(ponenteHidden.value){\n            (async() => {\n                const ponente = await obtenerPonente(ponenteHidden.value);\n\n                const ponenteHTML = document.createElement('li');\n                ponenteHTML.classList.add('listado-ponentes__ponente', 'listado-ponentes__ponente--seleccionado');\n                ponenteHTML.textContent = `${ponente.nombre} ${ponente.apellido}`;\n                \n                listadoPonentes.appendChild(ponenteHTML);\n            })()\n        }\n\n\n        async function obtenerPonentes() {\n            const url = `/api/ponentes`;\n\n            const request = await fetch(url);\n            const response = await request.json();\n\n            formatearPonentes(response);\n        }\n\n        async function obtenerPonente(id) {\n            const url = `/api/ponente?id=${id}`;\n            const request = await fetch(url);\n            const response = await request.json();\n            return response;\n        }\n\n        function formatearPonentes(arrayPonentes = []) {\n            ponentes = arrayPonentes.map(ponente => {\n                return {\n                    nombre: `${ponente.nombre.trim()} ${ponente.apellido.trim()}`,\n                    id: ponente.id,\n                }\n            });\n\n        }\n\n        function buscarPonentes(e) {\n            const busqueda = e.target.value.trim();\n\n            if (busqueda.length > 1) {\n                const expresion = new RegExp(busqueda, 'i');\n\n                ponentesFiltrados = ponentes.filter(ponente => {\n                    if (ponente.nombre.toLowerCase().search(expresion) != -1) {\n                        return ponente;\n                    }\n                });\n            } else {\n                ponentesFiltrados = [];\n            }\n\n            mostrarPonentes();\n        }\n\n        function mostrarPonentes() {\n\n            while (listadoPonentes.firstChild) {\n                listadoPonentes.removeChild(listadoPonentes.firstChild);\n            }\n\n            if (ponentesFiltrados.length > 0) {\n                ponentesFiltrados.forEach(ponente => {\n                    const ponenteHTML = document.createElement('li');\n                    ponenteHTML.classList.add('listado-ponentes__ponente')\n                    ponenteHTML.textContent = ponente.nombre;\n                    ponenteHTML.dataset.ponenteId = ponente.id;\n                    ponenteHTML.onclick = seleccionarPonente\n\n                    // Agregar al DOM\n                    listadoPonentes.appendChild(ponenteHTML);\n                })\n            } else {\n                const noPonentes = document.createElement('p');\n                noPonentes.classList.add('listado-ponentes__no-ponente');\n                noPonentes.textContent = 'No hay ponentes que concuerden con tu busqueda';\n\n                listadoPonentes.appendChild(noPonentes);\n            }\n\n\n        }\n\n        function seleccionarPonente(e) {\n            const ponente = e.target;\n\n            // Remover la clase previa\n            const ponentePrevio = document.querySelector('.listado-ponentes__ponente--seleccionado')\n            if(ponentePrevio) {\n                ponentePrevio.classList.remove('listado-ponentes__ponente--seleccionado')\n            }\n\n            ponente.classList.add('listado-ponentes__ponente--seleccionado')\n\n            ponenteHidden.value = ponente.dataset.ponenteId;\n        }\n\n    }\n\n})();","(function() {\n    const tagsInput = document.querySelector('#tags_input');\n    console.log(tagsInput);\n\n\n    if(tagsInput) {\n\n        const tagsDiv = document.querySelector('#tags');\n        const tagsInputHidden = document.querySelector('[name=\"tags\"]');\n\n\n        let tags = [];\n\n        // Recuperar del input oculto\n        if(tagsInputHidden.value !== '') {\n            tags = tagsInputHidden.value.split(',');\n\n            \n            mostrarTags();\n        }\n\n        // Escuchar los cambios en el input\n        tagsInput.addEventListener('keypress', guardarTag)\n\n        function guardarTag(e) {\n            if(e.keyCode === 44){\n\n                if(e.target.value.trim() === '' || e.target.value < 1) {\n                    return;\n                };\n\n                e.preventDefault();\n                tags = [...tags, e.target.value.trim()];\n                tagsInput.value = '';\n\n                mostrarTags();\n\n                \n                \n            };\n            \n        }\n\n        function mostrarTags(){\n            tagsDiv.textContent = '';\n\n            tags.forEach(tag => {\n                const etiqueta = document.createElement('li');\n                etiqueta.classList.add('formulario__tag')\n                etiqueta.textContent = tag;\n\n                etiqueta.ondblclick = eliminarTag;\n\n                tagsDiv.appendChild(etiqueta);\n            })\n\n            actualizarInputHidden();\n        }\n\n        function eliminarTag(e) {\n            e.target.remove();\n            tags = tags.filter(tag => tag !== e.target.textContent)\n            actualizarInputHidden();\n        }\n\n        function actualizarInputHidden() {\n            tagsInputHidden.value = tags.toString();\n        }\n    }\n})()"]}